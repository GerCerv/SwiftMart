<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Shop</title>
    <link rel="stylesheet" href="{{ asset('css/style.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/modal.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/uppernav.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/middlenav.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/sidebar.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/popups.css')}}" />
    <link rel="stylesheet" href="{{ asset('css/lowernav.css')}}" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/YOUR-FONTAWESOME-KIT.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    
    <style>
        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .stock-low {
            color: #ef4444;
            font-weight: 500;
        }
        /* Divider Styling */
        .divider {
            height: 1px;
            background: linear-gradient(to right, transparent, #10b981, transparent);
            opacity: 0;
            animation: fadeInDivider 0.6s ease-out forwards;
            margin-left: auto;
            margin-right: auto;
            width: 80%;
        }
        @keyframes fadeInDivider {
            from { opacity: 0; width: 0; }
            to { opacity: 1; width: 80%; }
        }
    </style>
</head>
<body class="bg-gray-100">
<x-uppernav/>
<x-loginmodal/>
<x-signupmodal/>
<x-middlenav/>
<x-lowernav/>
<x-sidebar/>
    <div class="container mx-auto px-4 py-8" >
        <h1 class="text-3xl font-bold mb-8 text-center">Our Products</h1>
        
        @if($products->isEmpty())
            <div class="text-center py-12">
                <p class="text-gray-500 text-lg">No products available at the moment.</p>
            </div>
        @else
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                @foreach($products as $product)
                <div class="product-card bg-white rounded-lg overflow-hidden shadow-md relative border-2 border-green hover:border-green-500 hover:border-2 hover:shadow-md transition duration-300 flex flex-col justify-between"  >
                    @if($product->discount > 0)
                        <span class="absolute top-2 left-2 text-xs px-2 py-1 rounded-full bg-green-100 text-green-600 {{ $product->status_badge }} transition-all duration-200 hover:bg-green-600 hover:text-white hover:scale-105">
                            {{ $product->discount }}% off
                        </span>
                    @endif
                    <div class="absolute top-2 right-2 z-10" >
                        @auth
                            <button class="wishlist-btn p-2 rounded-full bg-white hover:bg-gray-100 shadow-md {{ auth()->user()->hasInWishlist($product->id) ? 'text-red-500' : 'text-gray-400' }}"
                                    data-product-id="{{ $product->id }}"
                                    data-product-name="{{ $product->name }}"
                                    data-product-price="{{ number_format($product->price, 2, '.', '') }}"
                                    data-product-image="{{ $product->image ? asset('storage/products/' . $product->image) : asset('images/emp.jpg') }}"
                                    title="{{ auth()->user()->hasInWishlist($product->id) ? 'Remove from Wishlist' : 'Add to Wishlist' }}"
                                    data-product-stock="{{ $product->stock }}"
                                    >
                                    
                                <i class="fa-heart {{ auth()->user()->hasInWishlist($product->id) ? 'fas' : 'far' }}"></i>
                            </button>
                        @else
                            <a href="{{ route('login') }}" class="wishlist-btn p-2 rounded-full bg-white hover:bg-gray-100 text-gray-400 shadow-md"
                            title="Login to add to wishlist">
                                <i class="far fa-heart"></i>
                            </a>
                        @endauth
                    </div>
                    <div 
                        x-data="{
                            images: [
                                @if($product->image) '{{ asset('storage/products/' . $product->image) }}', @endif
                                @if($product->image2) '{{ asset('storage/products/' . $product->image2) }}', @endif
                                @if($product->image3) '{{ asset('storage/products/' . $product->image3) }}', @endif
                                @if($product->image4) '{{ asset('storage/products/' . $product->image4) }}', @endif
                                @if($product->image5) '{{ asset('storage/products/' . $product->image5) }}' @endif
                            ],
                            active: 0,
                            hover: false,
                            interval: null,
                            startCarousel() {
                                if (this.images.length <= 1) return;
                                this.hover = true;
                                this.interval = setInterval(() => {
                                    if (!this.hover) return;
                                    this.active = (this.active + 1) % this.images.length;
                                }, 1500);
                            },
                            stopCarousel() {
                                this.hover = false;
                                clearInterval(this.interval);
                            }
                        }"
                        @mouseenter="startCarousel()"
                        @mouseleave="stopCarousel()"
                        class="h-48 bg-gray-200 flex items-center justify-center overflow-hidden"
                    >
                        <template x-if="images.length > 0">
                            <img :src="images[active]" alt="{{ $product->name }}" class="w-full h-full object-cover transition-all duration-300">
                        </template>
                        <template x-if="images.length === 0">
                            <i class="fas fa-image text-4xl text-gray-400"></i>
                        </template>
                    </div>
                    <div class="p-4 flex flex-col justify-between flex-grow ">
                        <div>
                            <div class="flex justify-between items-start mb-1">
                                <h3 class="font-semibold text-lg line-clamp-2 flex-1 text-green-800">
                                    <a href="{{ route('product.show', $product->id) }}" class="hover:underline">{{ $product->name }}</a>
                                </h3>
                                @if($product->discount > 0)
                                    <div class="flex flex-col items-start">
                                        <span class="text-green-600 font-bold text-xl">
                                            ₱{{ number_format($product->price - ($product->price * ($product->discount / 100)), 2) }}
                                        </span>
                                        <small class="text-gray-400 line-through text-sm original-price">
                                            ₱{{ number_format($product->price, 2) }}
                                        </small>
                                    </div>
                                    
                                @else
                                    <span class="text-green-600 font-bold text-xl">
                                        ₱{{ number_format($product->price, 2) }}
                                    </span>

                                @endif
                            </div>
                            <!-- LINE  -->
                            <div class="divider my-1"></div>
                            @if($product->vendor)
                                <p class="text-sm text-gray-600 mb-2">Store: {{ $product->vendor->store_name }}</p>
                            @endif
                            <p class="text-sm text-gray-500 mb-3 line-clamp-2">{{ $product->description }}</p>
                            <div class="flex justify-between items-center mb-3">
                                <span class="text-sm {{ $product->stock < 10 ? 'text-red-500 font-semibold' : 'text-green-600 font-semibold' }}">
                                    Stock: {{ $product->stock }}
                                </span>
                                <span class="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">
                                    {{ ucfirst($product->category) }}
                                </span>
                            </div>
                        </div>
                        <div class="flex justify-between mt-4 pt-4 border-t">
                            <button class="add-to-cart-btn bg-green-500 hover:bg-green-600 text-white px-1 py-2 rounded flex items-center text-sm"
                                    data-product-id="{{ $product->id }}"
                                    data-product-name="{{ $product->name }}"
                                    data-product-price="{{ number_format($product->price, 2, '.', '') }}"
                                    data-product-image="{{ $product->image ? asset('storage/products/' . $product->image) : asset('images/emp.jpg') }}"
                                    data-product-store="{{ $product->vendor ? $product->vendor->store_name : 'Unknown' }}"
                                    data-product-category="{{ $product->category }}"
                                    data-product-stock="{{ $product->stock }}"
                                    {{ $product->stock < 1 ? 'disabled' : '' }}>
                                <i class="fas fa-shopping-basket mr-2"></i> Add to Cart
                            </button>
                            <button class="buy-now-btn bg-yellow-500 hover:bg-yellow-600 text-white px-1 py-2 rounded flex items-center text-sm"
                                    data-product-id="{{ $product->id }}"
                                    {{ $product->stock < 1 ? 'disabled' : '' }}>
                                <i class="fas fa-seedling mr-2"></i> Buy Now
                            </button>
                        </div>
                    </div>
                </div>
                @endforeach
            </div>
        @endif
    </div>
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <script>
document.addEventListener('DOMContentLoaded', function() {
    // Wishlist functionality (unchanged from your original)
    document.querySelectorAll('.wishlist-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            
            @auth
                const productId = this.getAttribute('data-product-id');
                const isInWishlist = this.classList.contains('text-red-500');
                const url = isInWishlist ? `/wishlist/remove/${productId}` : `/wishlist/add/${productId}`;
                const method = isInWishlist ? 'DELETE' : 'POST';

                this.disabled = true;
                
                fetch(url, {
                    method: method,
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const icon = this.querySelector('i');
                        if (isInWishlist) {
                            this.classList.replace('text-red-500', 'text-gray-400');
                            icon.classList.replace('fas', 'far');
                            this.setAttribute('title', 'Add to Wishlist');
                            const event = new CustomEvent('wishlist-updated', {
                                detail: { 
                                    productId: productId, 
                                    action: 'removed',
                                    countChange: -1
                                }
                            });
                            document.dispatchEvent(event);
                        } else {
                            this.classList.replace('text-gray-400', 'text-red-500');
                            icon.classList.replace('far', 'fas');
                            this.setAttribute('title', 'Remove from Wishlist');
                            const event = new CustomEvent('wishlist-updated', {
                                detail: { 
                                    productId: productId, 
                                    action: 'added',
                                    countChange: 1,
                                    product: {
                                        id: productId,
                                        name: this.getAttribute('data-product-name'),
                                        price: parseFloat(this.getAttribute('data-product-price')),
                                        image: this.getAttribute('data-product-image')
                                    }
                                }
                            });
                            document.dispatchEvent(event);
                        }
                    } else {
                        showToast(data.message, 'error');
                    }
                })
                .catch(error => {
                    showToast('An error occurred. Please try again.', 'error');
                })
                .finally(() => {
                    this.disabled = false;
                });
            @else
                const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                loginModal.show();
                const feedback = document.createElement('div');
                feedback.className = 'alert alert-warning position-fixed top-0 start-50 translate-middle-x mt-3';
                feedback.style.zIndex = '1100';
                feedback.textContent = 'Please login to use wishlist';
                document.body.appendChild(feedback);
                setTimeout(() => {
                    feedback.style.opacity = '0';
                    setTimeout(() => feedback.remove(), 300);
                }, 3000);
            @endauth
        });
    });

    // Add to cart functionality
    document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            @auth
                const productId = this.getAttribute('data-product-id');
                this.disabled = true;

                fetch(`/cart/add/${productId}`, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        //YOU CAN ADD TOAST HERE
                        const event = new CustomEvent('cart-updated', {
                            detail: {
                                productId: productId,
                                action: 'added',
                                countChange: 1,
                                product: {
                                    id: productId,
                                    name: this.getAttribute('data-product-name'),
                                    price: parseFloat(this.getAttribute('data-product-price')),
                                    image: this.getAttribute('data-product-image'),
                                    store_name: this.getAttribute('data-product-store'),
                                    category: this.getAttribute('data-product-category'),
                                    quantity: 1,
                                    stock: parseFloat(this.getAttribute('data-product-stock')),
                                    
                                }
                            }
                        });
                        document.dispatchEvent(event);
                    } else {
                        showToast(data.message, 'error');
                    }
                })
                .catch(error => {
                    showToast('An error occurred. Please try again.', 'error');
                })
                .finally(() => {
                    this.disabled = false;
                });
            @else
                const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                loginModal.show();
                const feedback = document.createElement('div');
                feedback.className = 'alert alert-warning position-fixed top-0 start-50 translate-middle-x mt-3';
                feedback.style.zIndex = '1100';
                feedback.textContent = 'Please login to use cart';
                document.body.appendChild(feedback);
                setTimeout(() => {
                    feedback.style.opacity = '0';
                    setTimeout(() => feedback.remove(), 300);
                }, 3000);
            @endauth
        });
    });

    // Buy now functionality
    document.querySelectorAll('.buy-now-btn').forEach(btn => {
        btn.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');

            @auth
                window.location.href = `/checkout?product_id=${productId}`;
            @else
                const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                loginModal.show();

                const feedback = document.createElement('div');
                feedback.className = 'alert alert-warning position-fixed top-0 start-50 translate-middle-x mt-3';
                feedback.style.zIndex = '1100';
                feedback.textContent = 'Please login to buy products';
                document.body.appendChild(feedback);

                setTimeout(() => {
                    feedback.style.opacity = '0';
                    setTimeout(() => feedback.remove(), 300);
                }, 3000);
            @endauth
        });
    });
    
    // Toast notification function
    function showToast(message, type = 'success') {
        alert(message); // Replace with a proper toast library if desired
    }
});
</script>
</body>
</html>